{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/hooks/ThemeContext.tsx", "../app/store/store.ts", "../app/store/selectedPeopleSlice.ts", "../app/store/activeCardSlice.ts", "../app-next/api/hello.ts", "../app/routes/_index.tsx", "../app-next/page.tsx", "../app/components/button/Button.tsx", "../app/components/card/detailedCard/DetailedCard.tsx", "../app-next/details/[personId]/page.tsx", "../app/components/card/baseCard/Card.tsx", "../app/hooks/useTheme.ts", "../app/components/checkbox/Checkbox.tsx", "../app/components/cardList/CardList.tsx", "../app/components/floatingPanel/FloatingPanel.tsx", "../app/components/Input/SearchInput/SearchInput.tsx", "../app/components/pagination/Pagination.tsx", "../app/hooks/hooks.tsx", "../app/routes/$.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { PassThrough } from 'node:stream';\nimport type { AppLoadContext, EntryContext } from '@remix-run/node';\nimport { createReadableStreamFromReadable } from '@remix-run/node';\nimport { RemixServer } from '@remix-run/react';\nimport { isbot } from 'isbot';\nimport { renderToPipeableStream } from 'react-dom/server';\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext,\n) {\n  return isbot(request.headers.get('user-agent') || '')\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext,\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext,\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set('Content-Type', 'text/html');\n\n          resolve(\n            new Response(createReadableStreamFromReadable(body), {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            }),\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      },\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set('Content-Type', 'text/html');\n\n          resolve(\n            new Response(createReadableStreamFromReadable(body), {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            }),\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      },\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from '@remix-run/react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '~/hooks/ThemeContext';\nimport { store } from './store/store';\nimport { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\n\nimport stylesheetUrl from './index.css';\n\nexport const links: LinksFunction = () => {\n  return [\n  ...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n  { rel: \"stylesheet\", href: stylesheetUrl }];\n\n};\n\nexport function meta() {\n  return [\n  { charset: 'utf-8' },\n  { title: 'My React App' },\n  { name: 'viewport', content: 'width=device-width,initial-scale=1' },\n  { name: 'theme-color', content: '#000000' },\n  { name: 'description', content: 'My beautiful React app' }];\n\n}\n\nexport default function Root() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Provider store={store}>\n          <ThemeProvider>\n            <div id=\"root\">\n              <Outlet />\n            </div>\n          </ThemeProvider>\n        </Provider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "'use client';\n\nimport React, { createContext, useState, ReactNode, useCallback } from 'react';\n\ntype Theme = 'light' | 'dark';\n\nexport interface ThemeContextProps {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nexport const ThemeContext = createContext<ThemeContextProps | undefined>(\n  undefined,\n);\n\nexport const ThemeProvider: React.FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const [theme, setTheme] = useState<Theme>('light');\n\n  const toggleTheme = useCallback(() => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  }, []);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n", "import { configureStore } from '@reduxjs/toolkit';\nimport selectedPeopleReducer from './selectedPeopleSlice';\nimport activeCardReducer from './activeCardSlice';\nimport { api } from '../../app-next/api/hello';\n\nexport const store = configureStore({\n  reducer: {\n    activeCard: activeCardReducer,\n    selectedPeople: selectedPeopleReducer,\n    [api.reducerPath]: api.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(api.middleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n", "import { Person } from '@components/card/ICardProps';\nimport { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from './store';\n\ninterface SelectedPeopleState {\n  selectedPeople: Person[];\n  activePersonId: string | null;\n}\n\nconst initialState: SelectedPeopleState = {\n  selectedPeople: [],\n  activePersonId: null,\n};\n\nconst selectedPeopleSlice = createSlice({\n  name: 'selectedPeople',\n  initialState,\n  reducers: {\n    togglePersonSelection(state, action: PayloadAction<Person>) {\n      const person = action.payload;\n      const index = state.selectedPeople.findIndex((p) => p.url === person.url);\n      if (index >= 0) {\n        state.selectedPeople.splice(index, 1);\n      } else {\n        state.selectedPeople.push(person);\n      }\n    },\n    clearSelection(state) {\n      state.selectedPeople = [];\n    },\n  },\n});\n\nexport const { togglePersonSelection, clearSelection } =\n  selectedPeopleSlice.actions;\n\nconst getSelectedPeople = (state: RootState) =>\n  state.selectedPeople.selectedPeople;\n\nexport const getSelectedPeopleUrls = createSelector(\n  [getSelectedPeople],\n  (selectedPeople: Person[]) => selectedPeople.map((p) => p.url),\n);\nexport type { SelectedPeopleState };\nexport default selectedPeopleSlice.reducer;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface ActiveCardState {\n  activeCardId: string | null;\n}\n\nconst initialState: ActiveCardState = {\n  activeCardId: null,\n};\n\nconst activeCardSlice = createSlice({\n  name: 'activeCard',\n  initialState,\n  reducers: {\n    setActiveCard: (state, action: PayloadAction<string | null>) => {\n      state.activeCardId = action.payload;\n    },\n  },\n});\n\nexport const { setActiveCard } = activeCardSlice.actions;\nexport type { ActiveCardState };\nexport default activeCardSlice.reducer;\n", "'use client';\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { Person } from '~/components/card/ICardProps';\n\nexport const api = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://swapi.dev/api/' }),\n  endpoints: (builder) => ({\n    getPeople: builder.query<\n      { results: Person[]; count: number },\n      { search: string; page: number }\n    >({\n      query: ({ search, page }) =>\n        `people/?page=${page}&search=${encodeURIComponent(search)}`,\n    }),\n    getPersonById: builder.query<Person, string>({\n      query: (id) => `people/${id}/`,\n    }),\n  }),\n});\n\ntype UseGetPeopleQuery = typeof api.endpoints.getPeople.useQuery;\n\ntype UseGetPersonByIdQuery = typeof api.endpoints.getPersonById.useQuery;\n\nexport const useGetPeopleQuery: UseGetPeopleQuery =\n  api.endpoints.getPeople.useQuery;\n\nexport const useGetPersonByIdQuery: UseGetPersonByIdQuery =\n  api.endpoints.getPersonById.useQuery;\n", "export { default } from '../../app-next/page';\n", "'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useGetPeopleQuery } from './api/hello';\nimport PersonDetails from './details/[personId]/page';\nimport { Button } from '~/components/button/Button';\nimport { CardList } from '~/components/cardList/CardList';\nimport { FloatingPanel } from '~/components/floatingPanel/FloatingPanel';\nimport { SearchInput } from '~/components/Input/SearchInput/SearchInput';\nimport { Pagination } from '~/components/pagination/Pagination';\nimport { useSearchFromLocalStorage } from '~/hooks/hooks';\nimport { useTheme } from '~/hooks/useTheme';\nimport { useNavigate } from '@remix-run/react';\n\nconst App: React.FC = () => {\n  const [search, setSearch, saveToLocalStorage] = useSearchFromLocalStorage();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [selectedDetail, setSelectedDetail] = useState<string | null>(null);\n  const { theme, toggleTheme } = useTheme();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const query = new URLSearchParams(window.location.search);\n    const initialPage = parseInt(query.get('page') || '1', 10);\n    setCurrentPage(initialPage);\n  }, []);\n\n  const { data, error, isLoading } = useGetPeopleQuery({\n    search,\n    page: currentPage,\n  });\n\n  useEffect(() => {\n    console.log('Selected detail:', selectedDetail);\n  }, [selectedDetail]);\n\n  useEffect(() => {\n    if (isLoading) {\n      console.log('Loading...');\n    }\n    if (error) {\n      console.error('API Error:', error);\n    }\n    if (data) {\n      console.log('API Data:', data);\n    }\n  }, [data, error, isLoading]);\n\n  const handleSearchChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    const newSearch = event.target.value.trim();\n    setSearch(newSearch);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n    setCurrentPage(1);\n    saveToLocalStorage(search);\n    navigate(`/?page=1`);\n  };\n\n  const handleResultClick = (id: string): void => {\n    setSelectedDetail(id);\n    navigate(`/?page=${currentPage}&detail=${id}`);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n    navigate(`/?page=${page}`);\n  };\n\n  const handleContainerClick = (): void => {\n    if (selectedDetail) {\n      setSelectedDetail(null);\n      navigate(`/?page=${currentPage}`);\n    }\n  };\n\n  const handleCloseDetails = (): void => {\n    setSelectedDetail(null);\n    navigate(`/?page=${currentPage}`);\n  };\n\n  const totalPages = data ? Math.ceil(data.count / 10) : 0;\n  const themeIcon =\n    theme === 'light' ? '/assets/dark.svg' : '/assets/light.svg';\n\n  return (\n    <div className={`app ${theme}`}>\n      <div className=\"app-header\" onClick={handleContainerClick}>\n        <h1>Star Wars</h1>\n        {error ? (\n          <p>Something went wrong...</p>\n        ) : (\n          <>\n            <span>\n              Here you can search some facts about persons from Star Wars by\n              name.\n            </span>\n            <form onSubmit={handleSubmit}>\n              <SearchInput\n                placeholder=\"Type to search...\"\n                value={search}\n                onChange={handleSearchChange}\n                name=\"search\"\n              />\n              <Button\n                ariaLabel=\"Search\"\n                imgSrc=\"/assets/search.svg\"\n                imgAlt=\"Search Icon\"\n                type=\"submit\"\n                className=\"search icon-invert\"\n              />\n            </form>\n            <div className=\"buttons\">\n              <Button\n                ariaLabel=\"Theme\"\n                imgSrc={themeIcon}\n                imgAlt=\"Theme Icon\"\n                type=\"button\"\n                className=\"theme\"\n                onClick={toggleTheme}\n              />\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"results-container\">\n        <div className=\"results-list\" onClick={handleContainerClick}>\n          {isLoading ? (\n            <div className=\"spinner\">Loading...</div>\n          ) : (\n            <>\n              <CardList\n                results={data?.results || []}\n                onResultClick={handleResultClick}\n              />\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                onPageChange={handlePageChange}\n              />\n            </>\n          )}\n        </div>\n        <div className=\"details-view\">\n          {selectedDetail && (\n            <PersonDetails\n              personId={selectedDetail}\n              onClose={handleCloseDetails}\n            />\n          )}\n        </div>\n      </div>\n      <FloatingPanel />\n    </div>\n  );\n};\n\nexport default App;\n", "import React from 'react';\n\ninterface IButtonProps {\n  onClick?: () => void;\n  ariaLabel: string;\n  imgSrc?: string;\n  imgAlt?: string;\n  text?: string;\n  disabled?: boolean;\n  className?: string;\n  type?: 'button' | 'submit' | 'reset';\n}\n\nexport const Button: React.FC<IButtonProps> = ({\n  onClick,\n  ariaLabel,\n  imgSrc,\n  imgAlt,\n  text,\n  className = '',\n  disabled = false,\n  type = 'button',\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      aria-label={ariaLabel}\n      disabled={disabled}\n      className={`button ${className} ${disabled ? 'disabled' : ''}`}\n    >\n      {imgSrc && (\n        <img\n          src={imgSrc}\n          alt={imgAlt || ''}\n          className=\"button-icon\"\n          width={24}\n          height={24}\n        />\n      )}\n      {text && <h5 className=\"button-text\">{text}</h5>}\n    </button>\n  );\n};\n", "import { Person } from '../ICardProps';\nexport interface DetailedCardProps {\n  person: Person;\n}\n\nconst getIdFromUrl = (url: string): string => {\n  const parts = url.split('/');\n  return parts[parts.length - 2];\n};\n\nexport const DetailedCard: React.FC<DetailedCardProps> = ({ person }) => {\n  const personId = getIdFromUrl(person.url);\n\n  const imageUrl = `https://starwars-visualguide.com/assets/img/characters/${personId}.jpg`;\n\n  return (\n    <div className=\"detailed-card\">\n      <img src={imageUrl} alt={person.name} />\n\n      <div className=\"detailed-text\">\n        <h3>{person.name}</h3>\n        <p>Height: {person.height} cm</p>\n        <p>Mass: {person.mass} kg</p>\n        <p>Hair Color: {person.hair_color}</p>\n        <p>Skin Color: {person.skin_color}</p>\n        <p>Eye Color: {person.eye_color}</p>\n        <p>Birth Year: {person.birth_year}</p>\n        <p>Gender: {person.gender}</p>\n      </div>\n    </div>\n  );\n};\n", "'use client';\n\nimport React from 'react';\nimport { useGetPersonByIdQuery } from '../../api/hello';\nimport { Button } from '~/components/button/Button';\nimport { DetailedCard } from '~/components/card/detailedCard/DetailedCard';\n\ntype PersonDetailsProps = {\n  personId: string;\n  onClose: () => void;\n};\n\nconst PersonDetails: React.FC<PersonDetailsProps> = ({ personId, onClose }) => {\n  const {\n    data: person,\n    error,\n    isLoading,\n  } = useGetPersonByIdQuery(personId || '');\n\n  if (!personId) {\n    return <p>No person ID provided.</p>;\n  }\n\n  return (\n    <div className=\"person-details\">\n      {isLoading ? (\n        <div className=\"spinner\">Loading...</div>\n      ) : error ? (\n        <p>Something went wrong...</p>\n      ) : person ? (\n        <>\n          <DetailedCard person={person} />\n          <Button\n            ariaLabel=\"Close\"\n            imgAlt=\"Close Icon\"\n            type=\"button\"\n            onClick={onClose}\n            imgSrc=\"/assets/close.svg\"\n          />\n        </>\n      ) : (\n        <p>No person details available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default PersonDetails;\n", "import { Person } from '../ICardProps';\nimport {\n  getSelectedPeopleUrls,\n  togglePersonSelection,\n} from '../../../store/selectedPeopleSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Checkbox } from '../../checkbox/Checkbox';\n\nexport interface ICardProps {\n  person: Person;\n  onClick: () => void;\n  isActive: boolean;\n}\n\nexport const Card: React.FC<ICardProps> = ({ person, onClick, isActive }) => {\n  const dispatch = useDispatch();\n  const selectedIds = useSelector(getSelectedPeopleUrls);\n  const isChecked = selectedIds.includes(person.url);\n\n  const handleCheckboxChange = () => {\n    dispatch(togglePersonSelection(person));\n  };\n\n  const handleCheckboxClick = (event: React.MouseEvent) => {\n    event.stopPropagation();\n  };\n\n  return (\n    <div\n      data-testid=\"card\"\n      onClick={onClick}\n      className={`card ${isActive ? 'active' : ''}`}\n    >\n      <h2>{person.name}</h2>\n      <p>\n        Gender: {person.gender}, Height: {person.height} cm, Mass: {person.mass}{' '}\n        kg\n      </p>\n      <div onClick={handleCheckboxClick}>\n        <Checkbox\n          id={`checkbox-${person.url}`}\n          checked={isChecked}\n          onChange={handleCheckboxChange}\n          label={`Select ${person.name} to keep in store`}\n        />\n      </div>\n    </div>\n  );\n};\n", "'use client';\nimport { useContext } from 'react';\nimport { ThemeContext, ThemeContextProps } from './ThemeContext';\n\nexport const useTheme = (): ThemeContextProps => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n", "import { useTheme } from '../../hooks/useTheme';\nimport React from 'react';\n\ninterface ICheckboxProps {\n  label: string;\n  checked?: boolean;\n  onChange: (checked: boolean) => void;\n  id: string;\n  disabled?: boolean;\n}\n\nexport const Checkbox: React.FC<ICheckboxProps> = ({\n  id,\n  label,\n  checked = false,\n  onChange,\n  disabled,\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.checked);\n  };\n  const { theme } = useTheme();\n\n  return (\n    <div className={`checkbox ${theme}`}>\n      <input\n        type=\"checkbox\"\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n        className=\"checkbox-input\"\n        id={id}\n      />\n      <label htmlFor={id} className=\"checkbox-label\">\n        {label}\n      </label>\n    </div>\n  );\n};\n", "'use client';\n\nimport { setActiveCard } from '../../store/activeCardSlice';\nimport { RootState } from '../../store/store';\nimport { Card } from '../card/baseCard/Card';\nimport { Person } from '../card/ICardProps';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\ninterface ICardListProps {\n  results: Person[];\n  onResultClick: (id: string) => void;\n}\n\nconst getIdFromUrl = (url: string): string => {\n  const parts = url.split('/');\n  return parts[parts.length - 2];\n};\n\nexport const CardList: React.FC<ICardListProps> = ({\n  results,\n  onResultClick,\n}) => {\n  const dispatch = useDispatch();\n  const activeCardId = useSelector(\n    (state: RootState) => state.activeCard.activeCardId,\n  );\n\n  const handleCardClick = (id: string) => {\n    dispatch(setActiveCard(id));\n    onResultClick(id);\n  };\n\n  return (\n    <div className=\"card-list\">\n      {results.map((result) => (\n        <Card\n          key={getIdFromUrl(result.url)}\n          person={result}\n          onClick={() => handleCardClick(getIdFromUrl(result.url))}\n          isActive={getIdFromUrl(result.url) === activeCardId}\n        />\n      ))}\n    </div>\n  );\n};\n", "'use client';\n\nimport React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import './floatingPanel.scss';\nimport { useTheme } from '../../hooks/useTheme';\nimport { RootState } from '../../store/store';\nimport { clearSelection } from '../../store/selectedPeopleSlice';\nimport { Button } from '../button/Button';\nimport { Person } from '../card/ICardProps';\n\nexport const FloatingPanel: React.FC = () => {\n  const selectedPeople = useSelector(\n    (state: RootState) => state.selectedPeople.selectedPeople,\n  );\n  const dispatch = useDispatch();\n  const { theme } = useTheme();\n  const downloadLinkRef = useRef<HTMLAnchorElement>(null);\n\n  const handleClearSelection = () => {\n    dispatch(clearSelection());\n  };\n\n  const handleLoad = () => {\n    const headers = [\n      'name',\n      'birth_year',\n      'eye_color',\n      'gender',\n      'hair_color',\n      'height',\n      'mass',\n      'skin_color',\n      'homeworld',\n      'films',\n      'species',\n      'starships',\n      'vehicles',\n      'url',\n      'created',\n      'edited',\n    ];\n\n    const csvRows = [];\n    csvRows.push(headers.join(','));\n\n    for (const person of selectedPeople) {\n      const values = headers.map((header) => {\n        const value = person[header as keyof Person];\n        return Array.isArray(value) ? value.join(', ') : value;\n      });\n      csvRows.push(values.join(','));\n    }\n\n    const csvData = csvRows.join('\\n');\n\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n\n    if (downloadLinkRef.current) {\n      downloadLinkRef.current.href = url;\n      downloadLinkRef.current.download = `${selectedPeople.length}_people.csv`;\n      downloadLinkRef.current.click();\n    }\n  };\n\n  const getElementText = (count: number): string => {\n    return count === 1 ? 'element' : 'elements';\n  };\n\n  if (selectedPeople.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={`floating-panel ${theme}`}>\n      <p>\n        Selected {selectedPeople.length} {getElementText(selectedPeople.length)}\n      </p>\n      <Button\n        ariaLabel=\"Submit\"\n        text=\"Clean\"\n        onClick={handleClearSelection}\n        className=\"text-only\"\n      />\n      <Button\n        ariaLabel=\"Submit\"\n        text=\"Download\"\n        onClick={handleLoad}\n        className=\"text-only\"\n      />\n      <a ref={downloadLinkRef} style={{ display: 'none' }}>\n        Download\n      </a>\n    </div>\n  );\n};\n", "'use client';\n\nimport { ChangeEvent } from 'react';\n\nexport interface SearchInputProps {\n  id?: string;\n  label?: string;\n  type?: string;\n  placeholder?: string;\n  value: string;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n  disabled?: boolean;\n  editMode?: boolean;\n  onEdit?: () => void;\n  error?: string;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nexport const SearchInput: React.FC<SearchInputProps> = ({\n  label,\n  placeholder,\n  value,\n  onChange,\n  name,\n  onKeyDown,\n}) => {\n  return (\n    <div className=\"input\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type=\"search\"\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        name={name}\n        id={name}\n        onKeyDown={onKeyDown}\n      />\n    </div>\n  );\n};\n", "'use client';\n\nimport { Button } from '../button/Button';\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n}) => {\n  const handlePrevious = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <div className=\"pagination\">\n      <Button\n        disabled={currentPage === 1}\n        ariaLabel=\"Previous\"\n        imgSrc=\"/assets/arrows-left.svg\"\n        imgAlt=\"Left Icon\"\n        type=\"button\"\n        className=\"arrow-left icon-invert\"\n        onClick={handlePrevious}\n      />\n      <p>\n        Page {currentPage} of {totalPages}\n      </p>\n      <Button\n        disabled={currentPage === totalPages}\n        ariaLabel=\"Next\"\n        imgSrc=\"/assets/arrow-right.svg\"\n        imgAlt=\"Right Icon\"\n        type=\"button\"\n        className=\"arrow-right icon-invert\"\n        onClick={handleNext}\n      />\n    </div>\n  );\n};\n", "'use client';\n\nimport { useCallback, useState } from 'react';\n\nexport const useSearchFromLocalStorage = () => {\n  const [search, setSearch] = useState<string>(() => {\n    if (typeof window !== 'undefined') {\n      const lastSearch = localStorage.getItem('lastSearch');\n      return lastSearch ?? '';\n    }\n    return '';\n  });\n\n  const updateSearch = useCallback((newSearch: string) => {\n    setSearch(newSearch);\n  }, []);\n\n  const saveToLocalStorage = useCallback((search: string) => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('lastSearch', search);\n    }\n  }, []);\n\n  return [search, updateSearch, saveToLocalStorage] as const;\n};\n", "export { default } from '../../app-next/page';\n", "export default {'entry':{'module':'/build/entry.client-V3O6XNFN.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-PVNSLVPX.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-FJ44GY64.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-3X2ANSGJ.js','imports':['/build/_shared/chunk-HNR7UIHW.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/$':{'id':'routes/$','parentId':'root','path':'*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$-W6C5YCYU.js','imports':['/build/_shared/chunk-6GLVL545.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-UPUYIJKM.js','imports':['/build/_shared/chunk-6GLVL545.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'48063261','hmr':{'runtime':'/build/_shared\\\\chunk-FJ44GY64.js','timestamp':1723076432150},'url':'/build/manifest-48063261.js'};", "\nimport * as entryServer from \"D:\\\\repositories\\\\RSschool-react-7\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\nimport * as route2 from \"./routes/$.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"unstable_singleFetch\":false,\"unstable_lazyRouteDiscovery\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/$\": {\n      id: \"routes/$\",\n      parentId: \"root\",\n      path: \"*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "createSlice", "initialState", "jsxDEV", "page_default", "useState", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "useDispatch", "useSelector", "jsxDEV", "getIdFromUrl", "useDispatch", "useSelector", "jsxDEV", "useSelector", "useDispatch", "jsxDEV", "jsxDEV", "useCallback", "useState", "search", "Fragment", "jsxDEV", "useState", "page_default", "page_default"]
}
