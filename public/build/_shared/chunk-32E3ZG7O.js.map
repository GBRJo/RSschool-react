{
  "version": 3,
  "sources": ["../../../app-next/page.tsx", "../../../app/components/button/Button.tsx", "../../../app/components/card/detailedCard/DetailedCard.tsx", "../../../app-next/details/[personId]/page.tsx", "../../../app/hooks/useTheme.ts", "../../../app/components/checkbox/Checkbox.tsx", "../../../app/components/card/baseCard/Card.tsx", "../../../app/components/cardList/CardList.tsx", "../../../app/components/floatingPanel/FloatingPanel.tsx", "../../../app/components/Input/SearchInput/SearchInput.tsx", "../../../app/components/pagination/Pagination.tsx", "../../../app/hooks/hooks.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app-next\\\\\\\\page.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app-next\\\\page.tsx\");\n  import.meta.hot.lastModified = \"1722986341519.1924\";\n}\n// REMIX HMR END\n\n'use client';\nimport { useEffect, useState } from 'react';\nimport { useGetPeopleQuery } from './api/hello';\nimport PersonDetails from './details/[personId]/page';\nimport { Button } from '~/components/button/Button';\nimport { CardList } from '~/components/cardList/CardList';\nimport { FloatingPanel } from '~/components/floatingPanel/FloatingPanel';\nimport { SearchInput } from '~/components/Input/SearchInput/SearchInput';\nimport { Pagination } from '~/components/pagination/Pagination';\nimport { useSearchFromLocalStorage } from '~/hooks/hooks';\nimport { useTheme } from '~/hooks/useTheme';\nimport { useNavigate } from '@remix-run/react';\nconst App = () => {\n  _s();\n  const [search, setSearch, saveToLocalStorage] = useSearchFromLocalStorage();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedDetail, setSelectedDetail] = useState(null);\n  const {\n    theme,\n    toggleTheme\n  } = useTheme();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const query = new URLSearchParams(window.location.search);\n    const initialPage = parseInt(query.get('page') || '1', 10);\n    setCurrentPage(initialPage);\n  }, []);\n  const {\n    data,\n    error,\n    isLoading\n  } = useGetPeopleQuery({\n    search,\n    page: currentPage\n  });\n  useEffect(() => {\n    console.log('Selected detail:', selectedDetail);\n  }, [selectedDetail]);\n  useEffect(() => {\n    if (isLoading) {\n      console.log('Loading...');\n    }\n    if (error) {\n      console.error('API Error:', error);\n    }\n    if (data) {\n      console.log('API Data:', data);\n    }\n  }, [data, error, isLoading]);\n  const handleSearchChange = event => {\n    const newSearch = event.target.value.trim();\n    setSearch(newSearch);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setCurrentPage(1);\n    saveToLocalStorage(search);\n    navigate(`/?page=1`);\n  };\n  const handleResultClick = id => {\n    setSelectedDetail(id);\n    navigate(`/?page=${currentPage}&detail=${id}`);\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    navigate(`/?page=${page}`);\n  };\n  const handleContainerClick = () => {\n    if (selectedDetail) {\n      setSelectedDetail(null);\n      navigate(`/?page=${currentPage}`);\n    }\n  };\n  const handleCloseDetails = () => {\n    setSelectedDetail(null);\n    navigate(`/?page=${currentPage}`);\n  };\n  const totalPages = data ? Math.ceil(data.count / 10) : 0;\n  const themeIcon = theme === 'light' ? '/assets/dark.svg' : '/assets/light.svg';\n  return <div className={`app ${theme}`}>\n      <div className=\"app-header\" onClick={handleContainerClick}>\n        <h1>Star Wars</h1>\n        {error ? <p>Something went wrong...</p> : <>\n            <span>\n              Here you can search some facts about persons from Star Wars by\n              name.\n            </span>\n            <form onSubmit={handleSubmit}>\n              <SearchInput placeholder=\"Type to search...\" value={search} onChange={handleSearchChange} name=\"search\" />\n              <Button ariaLabel=\"Search\" imgSrc=\"/assets/search.svg\" imgAlt=\"Search Icon\" type=\"submit\" className=\"search icon-invert\" />\n            </form>\n            <div className=\"buttons\">\n              <Button ariaLabel=\"Theme\" imgSrc={themeIcon} imgAlt=\"Theme Icon\" type=\"button\" className=\"theme\" onClick={toggleTheme} />\n            </div>\n          </>}\n      </div>\n      <div className=\"results-container\">\n        <div className=\"results-list\" onClick={handleContainerClick}>\n          {isLoading ? <div className=\"spinner\">Loading...</div> : <>\n              <CardList results={data?.results || []} onResultClick={handleResultClick} />\n              <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n            </>}\n        </div>\n        <div className=\"details-view\">\n          {selectedDetail && <PersonDetails personId={selectedDetail} onClose={handleCloseDetails} />}\n        </div>\n      </div>\n      <FloatingPanel />\n    </div>;\n};\n_s(App, \"ie1qvCBPdge0u6S1OPp15e9/rN4=\", false, function () {\n  return [useSearchFromLocalStorage, useTheme, useNavigate, useGetPeopleQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\button\\\\\\\\Button.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\button\\\\Button.tsx\");\n  import.meta.hot.lastModified = \"1722980744241.6316\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nexport const Button = ({\n  onClick,\n  ariaLabel,\n  imgSrc,\n  imgAlt,\n  text,\n  className = '',\n  disabled = false,\n  type = 'button'\n}) => {\n  return <button type={type} onClick={onClick} aria-label={ariaLabel} disabled={disabled} className={`button ${className} ${disabled ? 'disabled' : ''}`}>\n      {imgSrc && <img src={imgSrc} alt={imgAlt || ''} className=\"button-icon\" width={24} height={24} />}\n      {text && <h5 className=\"button-text\">{text}</h5>}\n    </button>;\n};\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\card\\\\\\\\detailedCard\\\\\\\\DetailedCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\card\\\\detailedCard\\\\DetailedCard.tsx\");\n  import.meta.hot.lastModified = \"1722901663978.3706\";\n}\n// REMIX HMR END\n\nconst getIdFromUrl = url => {\n  const parts = url.split('/');\n  return parts[parts.length - 2];\n};\nexport const DetailedCard = ({\n  person\n}) => {\n  const personId = getIdFromUrl(person.url);\n  const imageUrl = `https://starwars-visualguide.com/assets/img/characters/${personId}.jpg`;\n  return <div className=\"detailed-card\">\n      <img src={imageUrl} alt={person.name} />\n\n      <div className=\"detailed-text\">\n        <h3>{person.name}</h3>\n        <p>Height: {person.height} cm</p>\n        <p>Mass: {person.mass} kg</p>\n        <p>Hair Color: {person.hair_color}</p>\n        <p>Skin Color: {person.skin_color}</p>\n        <p>Eye Color: {person.eye_color}</p>\n        <p>Birth Year: {person.birth_year}</p>\n        <p>Gender: {person.gender}</p>\n      </div>\n    </div>;\n};\n_c = DetailedCard;\nvar _c;\n$RefreshReg$(_c, \"DetailedCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app-next\\\\\\\\details\\\\\\\\[personId]\\\\\\\\page.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app-next\\\\details\\\\[personId]\\\\page.tsx\");\n  import.meta.hot.lastModified = \"1722987239538.8445\";\n}\n// REMIX HMR END\n\n'use client';\nimport React from 'react';\nimport { useGetPersonByIdQuery } from '../../api/hello';\nimport { Button } from '~/components/button/Button';\nimport { DetailedCard } from '~/components/card/detailedCard/DetailedCard';\nconst PersonDetails = ({\n  personId,\n  onClose\n}) => {\n  _s();\n  const {\n    data: person,\n    error,\n    isLoading\n  } = useGetPersonByIdQuery(personId || '');\n  if (!personId) {\n    return <p>No person ID provided.</p>;\n  }\n  return <div className=\"person-details\">\n      {isLoading ? <div className=\"spinner\">Loading...</div> : error ? <p>Something went wrong...</p> : person ? <>\n          <DetailedCard person={person} />\n          <Button ariaLabel=\"Close\" imgAlt=\"Close Icon\" type=\"button\" onClick={onClose} imgSrc=\"/assets/close.svg\" />\n        </> : <p>No person details available.</p>}\n    </div>;\n};\n_s(PersonDetails, \"TdfkqGCBp2NzyaPkrrMsLrnEn2c=\", false, function () {\n  return [useGetPersonByIdQuery];\n});\n_c = PersonDetails;\nexport default PersonDetails;\nvar _c;\n$RefreshReg$(_c, \"PersonDetails\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\hooks\\\\useTheme.ts\"\n);\nimport.meta.hot.lastModified = \"1722901663983.5837\";\n}\n// REMIX HMR END\n\n'use client';\nimport { useContext } from 'react';\nimport { ThemeContext, ThemeContextProps } from './ThemeContext';\n\nexport const useTheme = (): ThemeContextProps => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\checkbox\\\\\\\\Checkbox.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\checkbox\\\\Checkbox.tsx\");\n  import.meta.hot.lastModified = \"1722901663979.369\";\n}\n// REMIX HMR END\n\nimport { useTheme } from '../../hooks/useTheme';\nimport React from 'react';\nexport const Checkbox = ({\n  id,\n  label,\n  checked = false,\n  onChange,\n  disabled\n}) => {\n  _s();\n  const handleChange = event => {\n    onChange(event.target.checked);\n  };\n  const {\n    theme\n  } = useTheme();\n  return <div className={`checkbox ${theme}`}>\n      <input type=\"checkbox\" checked={checked} disabled={disabled} onChange={handleChange} className=\"checkbox-input\" id={id} />\n      <label htmlFor={id} className=\"checkbox-label\">\n        {label}\n      </label>\n    </div>;\n};\n_s(Checkbox, \"JkSxfi8+JQlqgIgDOc3wQN+nVIw=\", false, function () {\n  return [useTheme];\n});\n_c = Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\card\\\\\\\\baseCard\\\\\\\\Card.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\card\\\\baseCard\\\\Card.tsx\");\n  import.meta.hot.lastModified = \"1722901663977.3738\";\n}\n// REMIX HMR END\n\nimport { getSelectedPeopleUrls, togglePersonSelection } from '../../../store/selectedPeopleSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Checkbox } from '../../checkbox/Checkbox';\nexport const Card = ({\n  person,\n  onClick,\n  isActive\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedIds = useSelector(getSelectedPeopleUrls);\n  const isChecked = selectedIds.includes(person.url);\n  const handleCheckboxChange = () => {\n    dispatch(togglePersonSelection(person));\n  };\n  const handleCheckboxClick = event => {\n    event.stopPropagation();\n  };\n  return <div data-testid=\"card\" onClick={onClick} className={`card ${isActive ? 'active' : ''}`}>\n      <h2>{person.name}</h2>\n      <p>\n        Gender: {person.gender}, Height: {person.height} cm, Mass: {person.mass}{' '}\n        kg\n      </p>\n      <div onClick={handleCheckboxClick}>\n        <Checkbox id={`checkbox-${person.url}`} checked={isChecked} onChange={handleCheckboxChange} label={`Select ${person.name} to keep in store`} />\n      </div>\n    </div>;\n};\n_s(Card, \"R+exOH3eGdObMVvAdTh+XLAb/68=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\cardList\\\\\\\\CardList.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\cardList\\\\CardList.tsx\");\n  import.meta.hot.lastModified = \"1722901663979.369\";\n}\n// REMIX HMR END\n\n'use client';\nimport { setActiveCard } from '../../store/activeCardSlice';\nimport { Card } from '../card/baseCard/Card';\nimport { useDispatch, useSelector } from 'react-redux';\nconst getIdFromUrl = url => {\n  const parts = url.split('/');\n  return parts[parts.length - 2];\n};\nexport const CardList = ({\n  results,\n  onResultClick\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const activeCardId = useSelector(state => state.activeCard.activeCardId);\n  const handleCardClick = id => {\n    dispatch(setActiveCard(id));\n    onResultClick(id);\n  };\n  return <div className=\"card-list\">\n      {results.map(result => <Card key={getIdFromUrl(result.url)} person={result} onClick={() => handleCardClick(getIdFromUrl(result.url))} isActive={getIdFromUrl(result.url) === activeCardId} />)}\n    </div>;\n};\n_s(CardList, \"uKbdp97MV8+j/huwaIgs5mWFmNI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\floatingPanel\\\\\\\\FloatingPanel.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\floatingPanel\\\\FloatingPanel.tsx\");\n  import.meta.hot.lastModified = \"1722901663980.3643\";\n}\n// REMIX HMR END\n\n'use client';\nimport React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import './floatingPanel.scss';\nimport { useTheme } from '../../hooks/useTheme';\nimport { clearSelection } from '../../store/selectedPeopleSlice';\nimport { Button } from '../button/Button';\nexport const FloatingPanel = () => {\n  _s();\n  const selectedPeople = useSelector(state => state.selectedPeople.selectedPeople);\n  const dispatch = useDispatch();\n  const {\n    theme\n  } = useTheme();\n  const downloadLinkRef = useRef(null);\n  const handleClearSelection = () => {\n    dispatch(clearSelection());\n  };\n  const handleLoad = () => {\n    const headers = ['name', 'birth_year', 'eye_color', 'gender', 'hair_color', 'height', 'mass', 'skin_color', 'homeworld', 'films', 'species', 'starships', 'vehicles', 'url', 'created', 'edited'];\n    const csvRows = [];\n    csvRows.push(headers.join(','));\n    for (const person of selectedPeople) {\n      const values = headers.map(header => {\n        const value = person[header];\n        return Array.isArray(value) ? value.join(', ') : value;\n      });\n      csvRows.push(values.join(','));\n    }\n    const csvData = csvRows.join('\\n');\n    const blob = new Blob([csvData], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    if (downloadLinkRef.current) {\n      downloadLinkRef.current.href = url;\n      downloadLinkRef.current.download = `${selectedPeople.length}_people.csv`;\n      downloadLinkRef.current.click();\n    }\n  };\n  const getElementText = count => {\n    return count === 1 ? 'element' : 'elements';\n  };\n  if (selectedPeople.length === 0) {\n    return null;\n  }\n  return <div className={`floating-panel ${theme}`}>\n      <p>\n        Selected {selectedPeople.length} {getElementText(selectedPeople.length)}\n      </p>\n      <Button ariaLabel=\"Submit\" text=\"Clean\" onClick={handleClearSelection} className=\"text-only\" />\n      <Button ariaLabel=\"Submit\" text=\"Download\" onClick={handleLoad} className=\"text-only\" />\n      <a ref={downloadLinkRef} style={{\n      display: 'none'\n    }}>\n        Download\n      </a>\n    </div>;\n};\n_s(FloatingPanel, \"azJOweYsLV28s/Prp5oulsoSTtc=\", false, function () {\n  return [useSelector, useDispatch, useTheme];\n});\n_c = FloatingPanel;\nvar _c;\n$RefreshReg$(_c, \"FloatingPanel\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\Input\\\\\\\\SearchInput\\\\\\\\SearchInput.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\Input\\\\SearchInput\\\\SearchInput.tsx\");\n  import.meta.hot.lastModified = \"1722901663971.3887\";\n}\n// REMIX HMR END\n\n'use client';\nexport const SearchInput = ({\n  label,\n  placeholder,\n  value,\n  onChange,\n  name,\n  onKeyDown\n}) => {\n  return <div className=\"input\">\n      <label htmlFor={name}>{label}</label>\n      <input type=\"search\" placeholder={placeholder} value={value} onChange={onChange} name={name} id={name} onKeyDown={onKeyDown} />\n    </div>;\n};\n_c = SearchInput;\nvar _c;\n$RefreshReg$(_c, \"SearchInput\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\pagination\\\\\\\\Pagination.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\pagination\\\\Pagination.tsx\");\n  import.meta.hot.lastModified = \"1722901663982.501\";\n}\n// REMIX HMR END\n\n'use client';\nimport { Button } from '../button/Button';\nexport const Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange\n}) => {\n  const handlePrevious = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n  const handleNext = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n  return <div className=\"pagination\">\n      <Button disabled={currentPage === 1} ariaLabel=\"Previous\" imgSrc=\"/assets/arrows-left.svg\" imgAlt=\"Left Icon\" type=\"button\" className=\"arrow-left icon-invert\" onClick={handlePrevious} />\n      <p>\n        Page {currentPage} of {totalPages}\n      </p>\n      <Button disabled={currentPage === totalPages} ariaLabel=\"Next\" imgSrc=\"/assets/arrow-right.svg\" imgAlt=\"Right Icon\" type=\"button\" className=\"arrow-right icon-invert\" onClick={handleNext} />\n    </div>;\n};\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\hooks\\\\hooks.tsx\"\n);\nimport.meta.hot.lastModified = \"1722901663983.5837\";\n}\n// REMIX HMR END\n\n'use client';\n\nimport { useCallback, useState } from 'react';\n\nexport const useSearchFromLocalStorage = () => {\n  const [search, setSearch] = useState<string>(() => {\n    if (typeof window !== 'undefined') {\n      const lastSearch = localStorage.getItem('lastSearch');\n      return lastSearch ?? '';\n    }\n    return '';\n  });\n\n  const updateSearch = useCallback((newSearch: string) => {\n    setSearch(newSearch);\n  }, []);\n\n  const saveToLocalStorage = useCallback((search: string) => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('lastSearch', search);\n    }\n  }, []);\n\n  return [search, updateSearch, saveToLocalStorage] as const;\n};\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "getIdFromUrl", "_s", "_c", "import_react", "import_jsx_dev_runtime", "_s", "_s", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_react", "search", "import_jsx_dev_runtime", "_s", "_s", "_c", "page_default"]
}
